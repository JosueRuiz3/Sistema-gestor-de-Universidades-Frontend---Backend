@page "/Estudiantes"
@inject HttpClient Http
@inject IJSRuntime JSRuntime

<h1>
    Gestión de estudiantes
</h1>

<div class="card dcard">
    <div class="card-body px-1 px-md-3">

        <form autocomplete="off">
            <div class="d-flex justify-content-between flex-column flex-sm-row mb-3 px-2 px-sm-0">
                <h3 class="text-125 pl-1 mb-3 mb-sm-0 text-secondary-d4">
                    Listado de estudiantes
                </h3>

                <div class="mb-2 mb-sm-0">
                    <button type="button" class="btn btn-blue px-3 d-block w-100 text-95 radius-round border-2 brc-black-tp10" @onclick="MostrarModalDeAgregar">
                        <i class="fa fa-plus mr-1"></i>
                        Agregar <span class="d-sm-none d-md-inline">Estudiante</span>
                    </button>
                </div>
            </div>

            @if (ListaDeEstudiantes == null)
            {
                <p><em>Cargando Listado De Estudiantes...</em></p> }
            else
            {
                <table id="simple-table" class="mb-0 table table-borderless table-bordered-x brc-secondary-l3 text-dark-m2 radius-1 overflow-hidden">
                    <thead class="text-dark-tp3 bgc-grey-l4 text-90 border-b-1 brc-transparent">
                        <tr>
                            <th>Cedula Estudiante</th>
                            <th>Nombre</th>
                            <th>Apellidos</th>
                            <th>Telefono</th>
                            <th>Direccion</th>
                            <th>Correo Electronico</th>
                            <th>Edad</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>

                    <tbody class="mt-1">

                        @foreach (var estudiantes in ListaDeEstudiantes)
                        {
                            <tr class="bgc-h-yellow-l4 d-style">
                                <td class="text-600 text-dark">@estudiantes.CedulaEstudiante</td>
                                <td class="text-600 text-orange-d2">@estudiantes.Nombre</td>
                                <td class="text-600 text-orange-d2">@estudiantes.Apellidos</td>
                                <td class="text-600 text-orange-d2">@estudiantes.Telefono</td>
                                <td class="text-600 text-orange-d2">@estudiantes.Direccion</td>
                                <td class="text-600 text-orange-d2">@estudiantes.CorreoElectronico</td>
                                <td class="text-600 text-orange-d2">@estudiantes.Edad</td>
                                <td>
                                    <div class="d-none d-lg-flex">

                                        <button type="button" class="mx-2px btn radius-1 border-2 btn-xs btn-brc-tp btn-light-secondary btn-h-lighter-success btn-a-lighter-success" @onclick="() => MostrarModalDeActualizar(estudiantes.CedulaEstudiante)">
                                            <i class="fa fa-pencil-alt"></i>
                                        </button>

                                        <button type="button" class="mx-2px btn radius-1 border-2 btn-xs btn-brc-tp btn-light-secondary btn-h-lighter-danger btn-a-lighter-danger" @onclick="() => MostrarModalDeEliminar(estudiantes.CedulaEstudiante)">
                                            <i class="fa fa-trash-alt"></i>
                                        </button>


                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>}

        </form>
    </div>
</div>

<div class="modal fade" id="ModalEdicionDeEstudiantes" tabindex="-1" role="dialog" aria-labelledby="LabelEdicionDeEstudiantes" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title text-primary-d3" id="LabelEdicionDeEstudiantes">
                    @(AccionDeEdicion + " " + "Estudiantes")
                </h5>

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <EditForm Model="@EstudiantesDtoModel" OnValidSubmit="@GuardarEstudiante">

                <DataAnnotationsValidator />

                <div class="modal-body">

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="CedulaEstudiante" class="mb-0">Cedula del Estudiante</label>
                        </div>

                        <div class="col-sm-8">
                            <InputText id="CedulaEstudiante" @bind-Value="@EstudiantesDtoModel.CedulaEstudiante" disabled="@(AccionDeEdicion == "Actualizar" ? true : false)"
                                       class="form-control col-sm-12 col-md-12" placeholder="Ingrese la Cedula del Estudiante" />
                            <ValidationMessage For="() => EstudiantesDtoModel.CedulaEstudiante" />
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="Nombre" class="mb-0">Nombre del Estudiante</label>
                        </div>

                        <div class="col-sm-8">
                            <InputText id="Nombre" @bind-Value="@EstudiantesDtoModel.Nombre"
                                       class="form-control col-sm-12 col-md-12" placeholder="Ingrese el Nombre del Estudiante" />
                            <ValidationMessage For="() => EstudiantesDtoModel.Nombre" />
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="Apellidos" class="mb-0">Apellidos del Estudiante</label>
                        </div>

                        <div class="col-sm-8">
                            <InputText id="Apellidos" @bind-Value="@EstudiantesDtoModel.Apellidos"
                                       class="form-control col-sm-12 col-md-12" placeholder="Ingrese los Apellidos del Estudiante" />
                            <ValidationMessage For="() => EstudiantesDtoModel.Apellidos" />
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="Telefono" class="mb-0">Telefono del Estudiante</label>
                        </div>

                        <div class="col-sm-8">
                            <InputText id="Telefono" @bind-Value="@EstudiantesDtoModel.Telefono"
                                       class="form-control col-sm-12 col-md-12" placeholder="Ingrese el Telefono del Estudiante" />
                            <ValidationMessage For="() => EstudiantesDtoModel.Telefono" />
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="Direccion" class="mb-0">Direccion del Estudiante</label>
                        </div>

                        <div class="col-sm-8">
                            <InputText id="Direccion" @bind-Value="@EstudiantesDtoModel.Direccion"
                                       class="form-control col-sm-12 col-md-12" placeholder="Ingrese la Direccion del Estudiante" />
                            <ValidationMessage For="() => EstudiantesDtoModel.Direccion" />
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="CorreoElectronico" class="mb-0">Correo Electronico del Estudiante</label>
                        </div>

                        <div class="col-sm-8">
                            <InputText id="CorreoElectronico" @bind-Value="@EstudiantesDtoModel.CorreoElectronico"
                                       class="form-control col-sm-12 col-md-12" placeholder="Ingrese el Correo Electronico del Estudiante" />
                            <ValidationMessage For="() => EstudiantesDtoModel.CorreoElectronico" />
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="Edad" class="mb-0">Edad del Estudiante</label>
                        </div>

                        <div class="col-sm-8">
                            <InputNumber id="Edad" @bind-Value="@EstudiantesDtoModel.Edad"
                                       class="form-control col-sm-12 col-md-12" placeholder="Ingrese la Edad del Estudiante" />
                            <ValidationMessage For="() => EstudiantesDtoModel.Edad" />
                        </div>
                    </div>

                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary px-4" data-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-primary px-4">Guardar</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

<div class="modal fade" id="ModalConfirmacionDeEliminacionDeEstudiantes" tabindex="-1" role="dialog" aria-labelledby="LabelConfirmacionDeEliminacionDeEstudiantes" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title text-primary-d3" id="LabelConfirmacionDeEliminacionDeEstudiantes">
                    Eliminar Estudiantes
                </h5>

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <EditForm Model="@EstudiantesDtoModel">


                <div class="modal-body">

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="EstudiantesPorEliminarCedulaEstudiante" class="mb-0">Cedula Estudiante</label>
                        </div>

                        <div class="col-sm-8">
                            <label for="EstudiantesPorEliminarCedulaEstudiante" class="form-control col-sm-12 col-md-12">@EstudiantesDtoModel.CedulaEstudiante</label>
                        </div>
                    </div>


                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="EstudiantesPorEliminarNombre" class="mb-0">Nombre del Estudiante</label>
                        </div>

                        <div class="col-sm-8">
                            <label for="EstudiantesPorEliminarNombre" class="form-control col-sm-12 col-md-12">@EstudiantesDtoModel.Nombre</label>
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="EstudiantesPorEliminarApellidos" class="mb-0">Apellidos del Estudiante</label>
                        </div>

                        <div class="col-sm-8">
                            <label for="EstudiantesPorEliminarApellidos" class="form-control col-sm-12 col-md-12">@EstudiantesDtoModel.Apellidos</label>
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="EstudiantesPorEliminarTelefono" class="mb-0">Telefono del Estudiante</label>
                        </div>

                        <div class="col-sm-8">
                            <label for="EstudiantesPorEliminarTelefono" class="form-control col-sm-12 col-md-12">@EstudiantesDtoModel.Telefono</label>
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="EstudiantesPorEliminarCorreoElectronico" class="mb-0">CorreoElectronico del Estudiante</label>
                        </div>

                        <div class="col-sm-8">
                            <label for="EstudiantesPorEliminarCorreoElectronico" class="form-control col-sm-12 col-md-12">@EstudiantesDtoModel.CorreoElectronico</label>
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="EstudiantesPorEliminarEdad" class="mb-0">Edad del Estudiante</label>
                        </div>

                        <div class="col-sm-8">
                            <label for="EstudiantesPorEliminarEdad" class="form-control col-sm-12 col-md-12">@EstudiantesDtoModel.Edad</label>
                        </div>
                    </div>

                    <div class="alert bgc-orange-l3 brc-orange-l1 text-dark-tp1" role="alert">
                        Desea
                        <a class="alert-link text-danger-d1">
                            Eliminar
                        </a>
                        este registro?
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary px-4" data-dismiss="modal">No</button>
                    <button type="button" class="btn btn-primary px-4" @onclick="ConfirmarEliminacionDeEstudiantes">Sí</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>


@code {
    private EstudianteDto[] ListaDeEstudiantes;

    private EstudianteDto EstudiantesDtoModel = new();


    private string AccionDeEdicion;

    private string EstudiantesPorActualizar;

    private string EstudiantesPorEliminar;

    private string UtlHost = "https://localhost:44365/api";

    protected override async Task OnInitializedAsync()
    {
        await ObtenerEstudiantes();
    }

    private async Task MostrarModalDeAgregar()
    {

        AccionDeEdicion = "Agregar";
        EstudiantesDtoModel = new();

        await JSRuntime.InvokeAsync<object>("global.openModal", "ModalEdicionDeEstudiantes");
    }

    private async Task MostrarModalDeActualizar(string CedulaEstudiante)
    {

        AccionDeEdicion = "Actualizar";

        await ObtenerEstudiantesPorId(CedulaEstudiante);

        EstudiantesPorActualizar = CedulaEstudiante;

        await JSRuntime.InvokeAsync<object>("global.openModal", "ModalEdicionDeEstudiantes");

    }

    private async Task GuardarEstudiante()
    {
        if (AccionDeEdicion == "Agregar")
        {
            await AgregarEstudiantes();
        }
        else
        {
            await ActualizarEstudiantes();
        }
    }


    private async Task MostrarModalDeEliminar(string CedulaEstudiante)
    {

        await ObtenerEstudiantesPorId(CedulaEstudiante);

        EstudiantesPorEliminar = CedulaEstudiante;

        await JSRuntime.InvokeAsync<object>("global.openModal", "ModalConfirmacionDeEliminacionDeEstudiantes");
    }

    private async Task ConfirmarEliminacionDeEstudiantes()
    {

        await EliminarEstudiantes();

    }

    private async Task ObtenerEstudiantes()
    {
        ListaDeEstudiantes = await Http.GetFromJsonAsync<EstudianteDto[]>($"{UtlHost}/Estudiantes");
    }

    private async Task ObtenerEstudiantesPorId(string CedulaEstudiante)
    {
        EstudiantesDtoModel = await Http.GetFromJsonAsync<EstudianteDto>($"{UtlHost}/Estudiantes/{CedulaEstudiante}");

    }


    private async Task AgregarEstudiantes()
    {
        var estudiantes = EstudiantesDtoModel;

        using var response = await Http.PostAsJsonAsync($"{UtlHost}/Estudiantes", estudiantes);

        if (response.IsSuccessStatusCode)
        {
            await JSRuntime.InvokeAsync<object>("global.closeModal", "ModalEdicionDeEstudiantes");

            await ObtenerEstudiantes();

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaExito", "Estudiantes agregado correctamente");

        }
        else
        {
            string errorMessage = response.ReasonPhrase;
            Console.WriteLine($"Error: {errorMessage}");

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaError", "No se pudo agregar el Estudiantes ");

        }
    }

    private async Task ActualizarEstudiantes()
    {
        var estudiantes = EstudiantesDtoModel;

        using var response = await Http.PutAsJsonAsync($"{UtlHost}/Estudiantes/{EstudiantesPorActualizar}", estudiantes);

        if (response.IsSuccessStatusCode)
        {
            await JSRuntime.InvokeAsync<object>("global.closeModal", "ModalEdicionDeEstudiantes");

            await ObtenerEstudiantes();

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaExito", "Estudiantes actualizado correctamente");
        }
        else
        {
            string errorMessage = response.ReasonPhrase;
            Console.WriteLine($"Error: {errorMessage}");

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaError", "No se pudo actualizar el Estudiante ");

        }
    }

    private async Task EliminarEstudiantes()
    {
        using var response = await Http.DeleteAsync($"{UtlHost}/Estudiantes/{EstudiantesPorEliminar}");

        if (response.IsSuccessStatusCode)
        {
            await JSRuntime.InvokeAsync<object>("global.closeModal", "ModalConfirmacionDeEliminacionDeEstudiantes");

            await ObtenerEstudiantes();

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaExito", "Estudiante eliminado correctamente");
        }
        else
        {
            string errorMessage = response.ReasonPhrase;
            Console.WriteLine($"Error: {errorMessage}");

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaError", "Error al eliminar el Estudiante");

        }
    }
}
