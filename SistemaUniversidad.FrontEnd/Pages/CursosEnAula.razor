@page "/CursosEnAula"
@inject HttpClient Http
@inject IJSRuntime JSRuntime

<h1>
    Lista Cursos En Aulas
</h1>

<div class="card dcard">
    <div class="card-body px-1 px-md-3">

        <form autocomplete="off">
            <div class="d-flex justify-content-between flex-column flex-sm-row mb-3 px-2 px-sm-0">
                <h3 class="text-125 pl-1 mb-3 mb-sm-0 text-secondary-d4">
                    Listado de Cursos En Aulas
                </h3>

                <div class="mb-2 mb-sm-0">
                    <button type="button" class="btn btn-blue px-3 d-block w-100 text-95 radius-round border-2 brc-black-tp10" @onclick="MostrarModalDeAgregar">
                        <i class="fa fa-plus mr-1"></i>
                        Agregar <span class="d-sm-none d-md-inline">Aula</span>
                    </button>
                </div>
            </div>

            @if (ListaDeCursosEnAulas == null)
            {
                <p><em>Cargando Listado De Cursos en Aulas...</em></p> }
            else
            {
                <table id="simple-table" class="mb-0 table table-borderless table-bordered-x brc-secondary-l3 text-dark-m2 radius-1 overflow-hidden">
                    <thead class="text-dark-tp3 bgc-grey-l4 text-90 border-b-1 brc-transparent">
                        <tr>
                            <th>Codigo Curso</th>
                            <th>Numero Aula</th>
                            <th>Numero Ciclo</th>
                            <th>Horario Inicio</th>
                            <th>Horario Fin</th>
                            <th>Dia De La Semana</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>

                    <tbody class="mt-1">

                        @foreach (var cursosEnAulas in ListaDeCursosEnAulas)
                        {
                            <tr class="bgc-h-yellow-l4 d-style">
                                <td class="text-600 text-dark">@cursosEnAulas.CodigoCurso</td>
                                <td class="text-600 text-orange-d2">@cursosEnAulas.NumeroAula</td>
                                <td class="text-600 text-orange-d2">@cursosEnAulas.NumeroCiclo</td>
                                <td class="text-600 text-orange-d2">@cursosEnAulas.HorarioInicio</td>
                                <td class="text-600 text-orange-d2">@cursosEnAulas.HorarioFin</td>
                                <td class="text-600 text-orange-d2">@cursosEnAulas.DiaDeLaSemana</td>
                                <td>
                                    <div class="d-none d-lg-flex">

                                        <button type="button" class="mx-2px btn radius-1 border-2 btn-xs btn-brc-tp btn-light-secondary btn-h-lighter-success btn-a-lighter-success" @onclick="() => MostrarModalDeActualizar(cursosEnAulas.CodigoCurso)">
                                            <i class="fa fa-pencil-alt"></i>
                                        </button>

                                        <button type="button" class="mx-2px btn radius-1 border-2 btn-xs btn-brc-tp btn-light-secondary btn-h-lighter-danger btn-a-lighter-danger" @onclick="() => MostrarModalDeEliminar(cursosEnAulas.CodigoCurso)">
                                            <i class="fa fa-trash-alt"></i>
                                        </button>


                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>}

        </form>
    </div>
</div>

<div class="modal fade" id="ModalEdicionDeCursoEnAula" tabindex="-1" role="dialog" aria-labelledby="LabelEdicionDeCursoEnAula" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title text-primary-d3" id="LabelEdicionDeCursoEnAula">
                    @(AccionDeEdicion + " " + "CursosEnAula")
                </h5>

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <EditForm Model="@CursosEnAulaDtoModel" OnValidSubmit="@GuardarCursosEnAulas">

                <DataAnnotationsValidator />

                <div class="modal-body">

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="CodigoCursoEnAula" class="mb-0">Código del Curso</label>
                        </div>

                        <div class="col-sm-8">
                            <InputText id="CodigoCursoEnAula" @bind-Value="@CursosEnAulaDtoModel.CodigoCurso" disabled="@(AccionDeEdicion == "Actualizar" ? true : false)"
                                       class="form-control col-sm-12 col-md-12" placeholder="Ingrese Codigo el Codigo del Curso" />
                            <ValidationMessage For="() => CursosEnAulaDtoModel.CodigoCurso" />
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="NumeroAula" class="mb-0">Numero de aula</label>
                        </div>

                        <div class="col-sm-8">
                            <InputText id="NumeroAula" @bind-Value="@CursosEnAulaDtoModel.NumeroAula"
                                       class="form-control col-sm-12 col-md-12" placeholder="Ingrese el Nombre del Aula" />
                            <ValidationMessage For="() => CursosEnAulaDtoModel.NumeroAula " />
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="NumeroCiclo" class="mb-0">Numero de Ciclo</label>
                        </div>

                        <div class="col-sm-8">
                            <InputText id="NumeroCiclo" @bind-Value="@CursosEnAulaDtoModel.NumeroCiclo"
                                       class="form-control col-sm-12 col-md-12" placeholder="Ingrese el Numero Ciclo" />
                            <ValidationMessage For="() => CursosEnAulaDtoModel.NumeroCiclo " />
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="HorarioInicio" class="mb-0">Horario Inicio</label>
                        </div>

                        <div class="col-sm-8">
                            <InputText id="HorarioInicio" @bind-Value="@CursosEnAulaDtoModel.HorarioInicio"
                                       class="form-control col-sm-12 col-md-12" placeholder="Ingrese el Horario Inicio" />
                            <ValidationMessage For="() => CursosEnAulaDtoModel.HorarioInicio " />
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="HorarioFin" class="mb-0">Horario Fin</label>
                        </div>

                        <div class="col-sm-8">
                            <InputText id="HorarioFin" @bind-Value="@CursosEnAulaDtoModel.HorarioFin"
                                       class="form-control col-sm-12 col-md-12" placeholder="Ingrese el Horario Fin" />
                            <ValidationMessage For="() => CursosEnAulaDtoModel.HorarioFin " />
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="DiaDeLaSemana" class="mb-0">Dia De La Semana</label>
                        </div>

                        <div class="col-sm-8">
                            <InputText id="DiaDeLaSemana" @bind-Value="@CursosEnAulaDtoModel.DiaDeLaSemana"
                                       class="form-control col-sm-12 col-md-12" placeholder="Ingrese el Dia De La Semana" />
                            <ValidationMessage For="() => CursosEnAulaDtoModel.DiaDeLaSemana " />
                        </div>
                    </div>

                </div>


                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary px-4" data-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-primary px-4">Guardar</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

<div class="modal fade" id="ModalConfirmacionDeEliminacionDeCursoEnAula" tabindex="-1" role="dialog" aria-labelledby="LabelConfirmacionDeEliminacionDeCursoEnAula" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title text-primary-d3" id="LabelConfirmacionDeEliminacionDeCursoEnAula">
                    Eliminar Curso en Aula
                </h5>

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <EditForm Model="@CursosEnAulaDtoModel">


                <div class="modal-body">

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="CursoEnAulaPorEliminarCodigoCurso" class="mb-0">Codigo de Curso en Aula</label>
                        </div>

                        <div class="col-sm-8">
                            <label for="CursoPorEliminarCodigoCurso" class="form-control col-sm-12 col-md-12">@CursosEnAulaDtoModel.CodigoCurso</label>
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="CursoEnAulaPorEliminarNumeroAula" class="mb-0">Numero de aula</label>
                        </div>

                        <div class="col-sm-8">
                            <label for="CursoEnAulaPorEliminarNumeroAula" class="form-control col-sm-12 col-md-12">@CursosEnAulaDtoModel.NumeroAula</label>
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="CursoEnAulaPorEliminarNumeroCiclo" class="mb-0">Numero de Ciclo</label>
                        </div>

                        <div class="col-sm-8">
                            <label for="CursoEnAulaPorEliminarNumeroCiclo" class="form-control col-sm-12 col-md-12">@CursosEnAulaDtoModel.NumeroCiclo</label>
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="CursoEnAulaPorEliminarHorarioInicio" class="mb-0">Horario de Inicio</label>
                        </div>

                        <div class="col-sm-8">
                            <label for="CursoEnAulaPorEliminarHorarioInicio" class="form-control col-sm-12 col-md-12">@CursosEnAulaDtoModel.HorarioInicio</label>
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="CursoEnAulaPorEliminarHorarioFin" class="mb-0">Horario de Fin</label>
                        </div>

                        <div class="col-sm-8">
                            <label for="CursoEnAulaPorEliminarHorarioFin" class="form-control col-sm-12 col-md-12">@CursosEnAulaDtoModel.HorarioFin</label>
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="CursoEnAulaPorEliminarDiaDeLaSemana" class="mb-0">Dia De La Semana</label>
                        </div>

                        <div class="col-sm-8">
                            <label for="CursoEnAulaPorEliminarDiaDeLaSemana" class="form-control col-sm-12 col-md-12">@CursosEnAulaDtoModel.DiaDeLaSemana</label>
                        </div>
                    </div>

                    <div class="alert bgc-orange-l3 brc-orange-l1 text-dark-tp1" role="alert">
                        Desea
                        <a class="alert-link text-danger-d1">
                            Eliminar
                        </a>
                        este registro?
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary px-4" data-dismiss="modal">No</button>
                    <button type="button" class="btn btn-primary px-4" @onclick="ConfirmarEliminacionDeCursoEnAula">Sí</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>


@code {
    private CursosEnAulaDto[] ListaDeCursosEnAulas;

    private CursosEnAulaDto CursosEnAulaDtoModel = new();


    private string AccionDeEdicion;

    private string CodigoCursoEnAulaPorActualizar;

    private string CodigoCursoEnAulaPorEliminar;

    private string UtlHost = "https://localhost:44365/api";

    protected override async Task OnInitializedAsync()
    {
        await ObtenerCursosEnAulas();
    }

    private async Task MostrarModalDeAgregar()
    {

        AccionDeEdicion = "Agregar";
        CursosEnAulaDtoModel = new();

        await JSRuntime.InvokeAsync<object>("global.openModal", "ModalEdicionDeCursoEnAula");
    }

    private async Task MostrarModalDeActualizar(string CodigoCurso)
    {

        AccionDeEdicion = "Actualizar";

        await ObtenerCursoEnAulaPorCodigo(CodigoCurso);

        CodigoCursoEnAulaPorActualizar = CodigoCurso;

        await JSRuntime.InvokeAsync<object>("global.openModal", "ModalEdicionDeCursoEnAula");

    }

    private async Task GuardarCursosEnAulas()
    {
        if (AccionDeEdicion == "Agregar")
        {
            await AgregarCursoEnAula();
        }
        else
        {
            await ActualizarCursoEnAula();
        }
    }


    private async Task MostrarModalDeEliminar(string CodigoCurso)
    {

        await ObtenerCursoEnAulaPorCodigo(CodigoCurso);

        CodigoCursoEnAulaPorEliminar = CodigoCurso;

        await JSRuntime.InvokeAsync<object>("global.openModal", "ModalConfirmacionDeEliminacionDeCursoEnAula");
    }

    private async Task ConfirmarEliminacionDeCursoEnAula()
    {

        await EliminarCursoEnAula();

    }

    private async Task ObtenerCursosEnAulas()
    {
        ListaDeCursosEnAulas = await Http.GetFromJsonAsync<CursosEnAulaDto[]>($"{UtlHost}/CursosEnAulas");
    }

    private async Task ObtenerCursoEnAulaPorCodigo(string CodigoCurso)
    {
        CursosEnAulaDtoModel = await Http.GetFromJsonAsync<CursosEnAulaDto>($"{UtlHost}/CursosEnAula/{CodigoCurso}");

    }

    private async Task AgregarCursoEnAula()
    {
        var cursosEnAulas = CursosEnAulaDtoModel;

        using var response = await Http.PostAsJsonAsync($"{UtlHost}/CursosEnAulas", cursosEnAulas);

        if (response.IsSuccessStatusCode)
        {
            await JSRuntime.InvokeAsync<object>("global.closeModal", "ModalEdicionDeCursoEnAula");

            await ObtenerCursosEnAulas();

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaExito", "Curso en aula agregado correctamente");

        }
        else
        {
            string errorMessage = response.ReasonPhrase;
            Console.WriteLine($"Error: {errorMessage}");

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaError", "No se pudo agregar el curso en Aula");

        }
    }

    private async Task ActualizarCursoEnAula()
    {
        var cursosEnAulas = CursosEnAulaDtoModel;

        using var response = await Http.PutAsJsonAsync($"{UtlHost}/CursosEnAulas/{CodigoCursoEnAulaPorActualizar}", cursosEnAulas);

        if (response.IsSuccessStatusCode)
        {
            await JSRuntime.InvokeAsync<object>("global.closeModal", "ModalEdicionDeCursoEnAula");

            await ObtenerCursosEnAulas();

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaExito", "Curso en Aula actualizado correctamente");
        }
        else
        {
            string errorMessage = response.ReasonPhrase;
            Console.WriteLine($"Error: {errorMessage}");

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaError", "No se pudo actualizar el curso ");

        }
    }

    private async Task EliminarCursoEnAula()
    {
        using var response = await Http.DeleteAsync($"{UtlHost}/CursosEnAulas/{CodigoCursoEnAulaPorEliminar}");

        if (response.IsSuccessStatusCode)
        {
            await JSRuntime.InvokeAsync<object>("global.closeModal", "ModalConfirmacionDeEliminacionDeCursoEnAula");

            await ObtenerCursosEnAulas();

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaExito", "Curso En Aula eliminado correctamente");
        }
        else
        {
            string errorMessage = response.ReasonPhrase;
            Console.WriteLine($"Error: {errorMessage}");

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaError", "Error al eliminar el curso en aula");

        }
    }
}
